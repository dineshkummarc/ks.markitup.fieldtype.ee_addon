h1. ks markitup

h2. Requirements

The ks.markitup field type requires the "FieldFrame extension":http://brandon-kelly.com/fieldframe/ by Brandon Kelly.

h2. Install ks.markitup

# download and unzip the package
# place the contents of the package in your site's system, or equivalent, directory. Or, find the ks_markitup folder within extensions/fieldtypes/ and place it in your site's system/extensions/fieldtypes directory.
# Enable the field type in the EE Control Panel by going to Admin &gt; Utilities &gt; Fieldtypes Manager and choosing the "Yes" radio button for KS Markitup 
# *Optional:* set options for the default MarkItUp Set and MarkItUp Skin in the Fieldtypes Manager. If you do not set them, the MarkItUp Set will be "default" and the MarkItup Skin will be "simple."
# Set a field to use the KS Markitup fieldtype by going to Admin &gt; Channel Administration &gt; Field Groups &gt; Custom Fields, choosing a field, and then selecting KS Markitup from the Field Type drop-down list.

h2. Configure ks.markitup

To change the appearance of buttons in a markup set, use the set's style.css file.
To add buttons or change the behavior of existing buttons, see the official "markItUp documentation":http://markitup.jaysalvat.com/documentation/

h2. Install Extra Markup Sets 

MarkItUp has additional markup sets, such as Textile or Markdown, that you can use instead of (or in addition to) the included default or html set.

# Go to http://markitup.jaysalvat.com/downloads/ and choose a markup set
# Download the zip file
# Unzip it in your markItUp sets folder
# Create an init.js file in your set's directory.
# Add this short script to the init.js file:
  <pre><code>$(document).ready(function() {
    $('.ksmarkitup-default').markItUp(mySettings);
  });
  </code></pre>
# In the above script, change _default_ in '.ksmarkitup-default' to the name of your set's directory.

h2. Use more than one set on a page

If you wish to use more than one markup set on an entry edit/publish page, you'll have to do some additional configuration:

# Set a nameSpace for the new set in the set.js file (see the default set.js for an example). The nameSpace adds a class to a container div, so you can specify button styles.
# Add your nameSpace class at the beginning of each line in the style.css file (see the default style.css for an example).
# In the set.js file, where it says *mySettings = {*, change "mySettings" to a unique name.
# In the set's init.js file (described above) change "mySettings" to the unique name you gave to the settings object in your set.js file:
  <pre><code>$(document).ready(function() {
    $('.ksmarkitup-default').markItUp(*myNewSetSettings*);
  });
  </code></pre>